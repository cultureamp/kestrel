#!/usr/bin/env bash

set -e -o pipefail -u

branch_qualifier() {
  local branch=$1
  case "$branch" in
    master)
      echo master;
      ;;
    *)
      echo development;
      ;;
  esac
}

lookup_role_arm() {
  local role_name=$2
  local account=$1
  echo "arn:aws:iam::${account}:role/$role_name"
}

assume_role() {
  local role_arn=$1
  local build="${BUILDKITE_BUILD_NUMBER:-}"
  local duration=3600

  echo "Assuming IAM role $role_arn ..."
  read -r AWS_ACCESS_KEY_ID AWS_SECRET_ACCESS_KEY AWS_SESSION_TOKEN < <(
    aws sts assume-role \
      --role-arn "$role_arn" \
      --role-session-name "aws-assume-role-buildkite-plugin-${build}" \
      --duration-seconds "$duration" \
      --query 'Credentials.[AccessKeyId,SecretAccessKey,SessionToken]' \
      --output text
  )
  export AWS_ACCESS_KEY_ID AWS_SECRET_ACCESS_KEY AWS_SESSION_TOKEN

  echo "Now operating as $(aws sts get-caller-identity --query 'Arn' --output text)"
}

fetch_build_secrets() {
  local branch_qualifier=$1;
  local pipeline=$2
  local path="/build-secrets/${branch_qualifier}/$pipeline/"
  echo "Reading credentials from $path"
  local parameters; parameters=$(aws ssm get-parameters-by-path --path "$path" --recursive --with-decryption --query 'Parameters[*].[Name,Value]' --output text)
  while read -r KEY VALUE; do
    local export_key="${KEY#$path}"
    if [[ -n "${export_key}" ]]; then
      echo "Setting $export_key to ${VALUE//?/*}"
      eval "export ${export_key}=${VALUE}"
    fi;
  done <<< "$parameters"
}

set_maven_version_suffix() {
  local branch_qualifier=$1
  case $branch_qualifier in
    master)
      export MAVEN_VERSION_SUFFIX=${BUILDKITE_BUILD_NUMBER}
    ;;
    *)
      export MAVEN_VERSION_SUFFIX=${BUILDKITE_BRANCH//[\/]/-}-${BUILDKITE_BUILD_NUMBER}-SNAPSHOT
    ;;
  esac
  echo "exporting MAVEN_VERSION_SUFFIX=${MAVEN_VERSION_SUFFIX}"
}

main() {
  local account; account=$(aws sts get-caller-identity --query Account --output text)
  local branch_qualifier; branch_qualifier=$(branch_qualifier "${BUILDKITE_BRANCH}")
  local build_role_name=build-role-$branch_qualifier-$BUILDKITE_PIPELINE_SLUG

  echo "--- Assuming build role $build_role_name"
  local build_role_arn; build_role_arn=$(lookup_role_arm "$account" "$build_role_name")
  assume_role "$build_role_arn"

  echo "--- Retrieving credentials from ParameterStore"
  fetch_build_secrets "$branch_qualifier" "$BUILDKITE_PIPELINE_SLUG"

  echo "--- Setting :maven: version suffix"
  set_maven_version_suffix "$branch_qualifier"

}

main
