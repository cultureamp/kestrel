buildscript {
    repositories {
        jcenter()
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "com.github.jengelman.gradle.plugins:shadow:2.0.1"
    }
}

//plugins {
//    id 'org.jetbrains.kotlin.jvm' version $kotlin_version
//}

apply plugin: 'kotlin'
apply plugin: 'application'
apply plugin: 'com.github.johnrengelman.shadow'

group 'com.cultureamp'
version '0.0.1-SNAPSHOT'
mainClassName = 'AppKt'

sourceSets {
    main.kotlin.srcDirs = main.java.srcDirs = ["src/main/kotlin"]
    test.kotlin.srcDirs = test.java.srcDirs = ["src/test/kotlin"]
}

shadowJar {
    baseName = 'main-with-deps'
    classifier = null
    version = null
}

test {
    environment "CONNECT_TO_DATABASE", "false"
}

repositories {
    mavenCentral()
    mavenLocal()
    jcenter()
    maven { url 'https://kotlin.bintray.com/ktor' }
}



dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    compile "joda-time:joda-time:2.10.1"
    testCompile 'io.kotlintest:kotlintest-runner-junit5:3.1.10'
    compile "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    compile "io.ktor:ktor-server-core:$ktor_version"
    compile "io.ktor:ktor-server-netty:$ktor_version"
    compile "io.ktor:ktor-jackson:$ktor_version"
    compile "org.jetbrains.exposed:exposed:$exposed_version"

    implementation "io.github.microutils:kotlin-logging:1.4.4"

    implementation 'io.arrow-kt:arrow-core-data:0.9.0'
    implementation 'io.arrow-kt:arrow-effects-data:0.9.0'
    implementation 'org.postgresql:postgresql:42.2.5'
    implementation 'com.zaxxer:HikariCP:2.7.8'
    implementation 'com.amazonaws:aws-java-sdk-iam:1.11.560'
    implementation 'com.amazonaws:aws-java-sdk-rds:1.11.560'
}

test {
    environment "CONNECT_TO_DATABASE", "false"
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

test {
    useJUnitPlatform()

    // show standard out and standard error of the test JVM(s) on the console
    testLogging.showStandardStreams = true

    testLogging {
        events "PASSED", "FAILED", "SKIPPED", "STANDARD_OUT", "STANDARD_ERROR"
    }
}

compileKotlin {
    kotlinOptions {
        freeCompilerArgs = ["-XXLanguage:+InlineClasses"]
    }
}
